# 🚀 Distributed Systems Projects

Welcome to the **Distributed Systems Projects** repository! This collection showcases hands-on projects that demonstrate core concepts in distributed computing. Each project is designed to help you learn by building and experimenting. Dive in and explore!

---

## 📚 Projects Overview

| #  | Project Name                  | Description                                      | Learning Goal                                  |
|----|-------------------------------|--------------------------------------------------|------------------------------------------------|
| 1  | [ChatRoom](#-chatroom)        | Real-time chat room for multiple clients          | Message broadcasting, concurrency, sync        |
| 2  | [Client-Server-Communication](#-client-server-communication) | Direct client-server communication                | Socket programming, request-response           |
| 3  | [FileStorageSystem](#-filestoragesystem) | Distributed file storage and retrieval            | File transfer, consistency, storage mgmt       |
| 4  | [Key-Value Store](#-key-value-store) | Simple distributed key-value store                | Data storage, key-value paradigm, replication  |
| 5  | [Load-Balancer](#-load-balancer) | Distributes requests across backend servers       | Load balancing, fault tolerance, scalability   |
| 6  | [Time-Based-Task-Scheduler](#-time-based-task-scheduler) | Schedules tasks at specified times                | Task scheduling, time sync, coordination       |

---

## 💬 ChatRoom

**Description:**
A simple chat room application where multiple clients can connect and exchange messages in real time.

**Learning Goal:**
Understand message broadcasting, concurrency, and synchronization in a distributed environment.

---

## 🔗 Client-Server-Communication

**Description:**
A basic client-server model demonstrating direct communication between a client and a server.

**Learning Goal:**
Learn the fundamentals of socket programming and request-response patterns in distributed systems.

---

## 🗄️ FileStorageSystem

**Description:**
A distributed file storage system that allows clients to store and retrieve files from a server.

**Learning Goal:**
Explore file transfer protocols, data consistency, and storage management in distributed architectures.

---

## 🗝️ Key-Value Store

**Description:**
A simple distributed key-value store supporting basic CRUD operations.

**Learning Goal:**
Understand distributed data storage, key-value paradigms, and basic replication strategies.

---

## ⚖️ Load-Balancer

**Description:**
A load balancer that distributes incoming client requests across multiple backend servers.

**Learning Goal:**
Learn about load balancing algorithms, fault tolerance, and scalability in distributed systems.

---

## ⏰ Time-Based-Task-Scheduler

**Description:**
A scheduler that executes tasks at specified times, simulating distributed cron jobs.

**Learning Goal:**
Study task scheduling, time synchronization, and distributed coordination.

---

> ✨ *Happy Learning! Feel free to contribute, suggest improvements, or ask questions via issues or pull requests.*
